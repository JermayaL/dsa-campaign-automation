function main() {

    const sheet_url = "https://docs.google.com/spreadsheets/d/1O4KpzIFzGgsVhPONp8kgkypUQrj1tTeP9WJVHQZqAjo/copy"
    const sh = SpreadsheetApp.openByUrl(sheet_url).getSheetByName("Settings")
    const arr = sh.getDataRange().getValues().map(i => i[1])
    const [dsa, days, clicks, impressions, campaign, headline2, headline3, description1, description2, cpc] = arr
    const [start, end] = getDates(days)
    const query = `SELECT dynamic_search_ads_search_term_view.search_term,
                          dynamic_search_ads_search_term_view.landing_page,
                          dynamic_search_ads_search_term_view.has_negative_keyword,
                          campaign.name
                   FROM dynamic_search_ads_search_term_view
                   WHERE dynamic_search_ads_search_term_view.has_negative_keyword = FALSE
                     AND metrics.impressions > ${impressions}
                     AND metrics.clicks > ${clicks}
                     AND campaign.name = "${dsa}"
                     and segments.date >= '${start}'
                     AND segments.date <= '${end}'
    `
    const campaignIterator = AdsApp.campaigns().withCondition(`campaign.name="${dsa}"`).get()
    if (!campaignIterator.hasNext()) return
    const cur_camp = campaignIterator.next()
    const searchResults = AdsApp.search(query)

    for (let {dynamicSearchAdsSearchTermView} of searchResults) {
        const searchTerm = dynamicSearchAdsSearchTermView.searchTerm
        const url = dynamicSearchAdsSearchTermView.landingPage
        addNewGroup({campaign, kw:searchTerm, url, headline2, headline3, description1, description2, cpc})
        cur_camp.createNegativeKeyword(`[${searchTerm}]`)
        break;
    }

}

function getDates(days) {
    const start = Utilities.formatDate(new Date(Date.now() - days * 86400000), AdsApp.currentAccount().getTimeZone(), "yyyy-MM-dd")
    const end = Utilities.formatDate(new Date(Date.now() - 1 * 86400000), AdsApp.currentAccount().getTimeZone(), "yyyy-MM-dd")
    return [start, end]
}

function addNewGroup({campaign, kw, headline2, headline3, description1, description2, url, cpc}) {
    const campaignIterator = AdsApp.campaigns().withCondition(`campaign.name="${campaign}"`).get()
    if (!campaignIterator.hasNext()) return
    const camp = campaignIterator.next()
    const adGroupOperation = camp.newAdGroupBuilder().withName(`${kw} 2`).withStatus("PAUSED").build();
    const adGroup = adGroupOperation.getResult();
    adGroup.newKeywordBuilder().withText(`[${kw}]`).withCpc(parseFloat(cpc)).build();
    const adsBuilder = adGroup.newAd().responsiveSearchAdBuilder().withHeadlines([
        {text: `{KeyWord:${kw}}`, pinning: "HEADLINE_1"},
        {text: headline2, pinning: "HEADLINE_2"},
        {text: headline3, pinning: "HEADLINE_3"}
    ]).withDescriptions([
        {text: description1, pinning: "DESCRIPTION_1"},
        {text: description2, pinning: "DESCRIPTION_2"}
    ]).withFinalUrl(url)
        .build()
    var ad = adsBuilder.getResult();
    adGroup.enable()
}
